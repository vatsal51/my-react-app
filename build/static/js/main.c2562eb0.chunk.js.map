{"version":3,"sources":["components/CheckBoxForm.js","components/ItemList.js","components/SearchForm.js","components/Airports.js","App.js","reportWebVitals.js","index.js"],"names":["CheckBoxForm","props","newList","items","RefreshedList","TempList","map","element","type","Selection","push","setArray","Set","x","JSON","stringify","parse","className","e","index","htmlFor","name","id","value","checked","onChange","ToggleItem","ItemList","post","data-head","icao","iata","elevation","latitude","longitude","SearchForm","people","useState","people2","setPeople2","React","searchTerm","setSearchTerm","useEffect","console","log","handleSearch","searchValue","FilterParam","filterdata","filter","entry","some","includes","placeholder","event","target","results","Airports","data","setItems","fetch","then","response","json","itemsName","UpdateItems","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c2562eb0.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nexport default function CheckBoxForm(props) {\r\n\r\n\tvar newList = props.items;\r\n\tvar RefreshedList = [];\r\n\tconst TempList = [];\r\n\tnewList.map(element => {\r\n\t\tRefreshedList = { \"type\": element.type, \"Selection\": element.Selection }\r\n\t\tTempList.push(RefreshedList);\r\n\t\t// Filtering out duplicate types\r\n\t\tconst setArray = new Set(TempList.map(x => JSON.stringify(x)))\r\n\t\tnewList = [...setArray].map(x => JSON.parse(x))\r\n\t});\r\n\t// console.log(\"NewList --\", newList);\r\n\treturn (\r\n\t\t<div className=\"checkbox\">\r\n\t\t\t<h3>Type</h3>\r\n\t\t\t<ul>\r\n\t\t\t\t{\r\n\t\t\t\t\tnewList.map((e, index) =>\r\n\t\t\t\t\t\t<li key={index}>\r\n\t\t\t\t\t\t\t<label htmlFor={e.type}>{e.type}\r\n\t\t\t\t\t\t\t\t<input type=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\tname={e.type}\r\n\t\t\t\t\t\t\t\t\tid={e.type}\r\n\t\t\t\t\t\t\t\t\tvalue={e.Selection}\r\n\t\t\t\t\t\t\t\t\tchecked={e.Selection ? true : false}\r\n\t\t\t\t\t\t\t\t\tonChange={() => { props.ToggleItem(e.type) }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t</ul>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from 'react'\r\nexport default function ItemList(props) {\r\n\t// console.log(\"Final\", props.items);\r\n\tfunction show(post) {\r\n\r\n\t\treturn <>\r\n\t\t\t<div className=\"data\">\r\n\t\t\t\t<span data-head=\"Name\">  {post.name} </span>\r\n\t\t\t\t<span data-head=\"ICAO\">  {post.icao}  </span>\r\n\t\t\t\t<span data-head=\"IATA\">  {post.iata}  </span>\r\n\t\t\t\t<span data-head=\"Elev\">  {post.elevation} ft </span>\r\n\t\t\t\t<span data-head=\"Lat.\"> N {post.latitude}  </span>\r\n\t\t\t\t<span data-head=\"Long.\"> W {post.longitude}  </span>\r\n\t\t\t\t<span data-head=\"Type\">  {post.type} </span>\r\n\t\t\t\t{/* <span>  {post.Selection}</span> */}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"itemData\">\r\n\r\n\t\t\t<ul className=\"header\">\r\n\t\t\t\t<li><h4>Name</h4></li>\r\n\t\t\t\t<li><h4>ICAO</h4></li>\r\n\t\t\t\t<li><h4>IATA</h4></li>\r\n\t\t\t\t<li><h4>Elev</h4></li>\r\n\t\t\t\t<li><h4>Lat.</h4></li>\r\n\t\t\t\t<li><h4>Long.</h4></li>\r\n\t\t\t\t<li><h4>Type</h4></li>\r\n\t\t\t</ul>\r\n\r\n\t\t\t{props.items.map((e) =>\r\n\t\t\t\t<div key={e.id}>\r\n\t\t\t\t\t{e.Selection === true ? show(e) : false}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t)}\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport ItemList from \"./ItemList\"\r\n\r\n\r\nexport default function SearchForm(props) {\r\n\tconst people = props.items\r\n\tconst [people2, setPeople2] = useState(people);\r\n\tconst [searchTerm, setSearchTerm] = React.useState(\"\");\r\n\t// setPeople2(people);\r\n\tuseEffect(() => {\r\n\t\tsetPeople2(people);\r\n\t\tconsole.log(\"set ppl\", people2)\r\n\t}, [])\r\n\tconst handleChange = event => {\r\n\t\tsetSearchTerm(event.target.value);\r\n\t\thandleSearch(event.target.value)\r\n\t};\r\n\r\n\r\n\t// Filtering data on search \r\n\tvar handleSearch = (searchValue) => {\r\n\t\t// Add More Param as per Response to get more filtering across serveral Coloumn\r\n\t\tlet FilterParam = [\"name\", \"city\", \"iata\"];\r\n\t\tconst filterdata = people.filter((entry) => {\r\n\t\t\treturn FilterParam.some(filter => entry[filter].includes(searchValue))\r\n\t\t})\r\n\t\tsetPeople2(filterdata); //Setting Filter Data\r\n\t\tconsole.log(\"Pof\", people2);\r\n\t};\r\n\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"Div\">\r\n\t\t\t<div className=\"search\"><h3>Filter by Search</h3>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\tvalue={searchTerm}\r\n\t\t\t\t\tonChange={(handleChange)}\r\n\t\t\t\t/></div>\r\n\r\n\t\t\t<ItemList items={searchTerm == \"\" ? people : people2} results={people2} className=\"itemData\" />\r\n\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport CheckBoxForm from \"./CheckBoxForm\"\r\nimport ItemList from \"./ItemList\"\r\nimport SearchForm from \"./SearchForm\"\r\n\r\nfunction Airports(data) {\r\n\r\n\tconst [items, setItems] = useState([]);\r\n\t// Show item list on checkbox selected\r\n\tconst ToggleItem = (itemsName) => {\r\n\t\tconsole.log('ToggleNew', itemsName);\r\n\t\tconst UpdateItems = items.map(ItemList =>\r\n\t\t\t// ItemList.type === itemsName ? items : items\r\n\t\t\tItemList.type === itemsName ?\r\n\t\t\t\t{ ...ItemList, Selection: !ItemList.Selection ? true : false }\r\n\t\t\t\t: ItemList\r\n\t\t)\r\n\t\t// console.log(\"dsadsa\", UpdateItems);\r\n\t\tsetItems(UpdateItems);\r\n\t}\r\n\r\n\t// Fetching Json data and storing\r\n\tuseEffect(() => {\r\n\r\n\t\tfetch(\"https://raw.githubusercontent.com/vatsal51/my-react-app/main/public/airports.json\")\r\n\t\t\t.then((response) => response.json())\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetItems(\r\n\t\t\t\t\tdata.map(ItemList =>\r\n\t\t\t\t\t\tItemList ? { ...ItemList, Selection: true } : ItemList\r\n\t\t\t\t\t)\r\n\t\t\t\t);\r\n\t\t\t\t// console.table(data)\r\n\t\t\t});\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<CheckBoxForm items={items} ToggleItem={ToggleItem} />\r\n\t\t\t<SearchForm items={items} />\r\n\t\t\t{/* <ItemList items={items} /> */}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Airports\r\n\r\n\r\n\r\n\r\n","import './App.css';\nimport Airports from './components/Airports';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n\n\n\n\nfunction App() {\n\n  \n  return (\n    <div className=\"App box\">\n     <Airports Airports={Airports}/>\n    </div>\n  );\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}